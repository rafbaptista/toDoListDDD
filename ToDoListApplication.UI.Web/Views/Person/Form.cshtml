@using ToDoListApplication.UI.Web.Controllers
@using ToDoListApplication.UI.Web.ViewModels
@model PersonViewModel
@{

    string actionName = Model == null ? "Create" : "Edit";                           
    //if model is null, it's a creation, if model.Id is null, it's a creation that didn't meet the requirements and controller rejected
    string imagePath = (Model == null || Model.Id == null) ? "/Content/assets/images/initialAvatar.png" : Model.AvatarImagePath;


}
<div class="container my-3">
    <h1 class="display-4">@Html.Raw(actionName + " Person")</h1>
 
    <form method="post" action="@Url.Action(nameof(PersonController.SaveOrUpdate))" enctype="multipart/form-data">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.AntiForgeryToken()

        <div class="form-group">
            @Html.LabelFor(model => model.AvatarImage, new { @class = "control-label col-md-2" })
            <br />
            <img src="@imagePath" class="avatar rounded-circle img-fluid" style="height:120px; width:120px" onclick="inputFile.click()"/>
            <input type="file" id="AvatarImage" name="AvatarImage" accept="image/*" class="d-none" onchange="img.src=window.URL.createObjectURL(this.files[0])"/>
            @Html.ValidationMessageFor(model => model.AvatarImage, "", new { @class = "text-danger" })
        </div>        

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Gender, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-10">
            <button type="submit" class="btn btn-primary">Send</button>
        </div>
    </form>
</div>

@section Styles{
    <style>
        img.avatar:hover {
            cursor: pointer;
        }
    </style>
}

@section Scripts {
    <script>
        var inputFile = document.querySelector("#AvatarImage");
        var img = document.querySelector(".avatar");
    </script>
}