@using ToDoListApplication.UI.Web.Controllers
@using ToDoListApplication.UI.Web.ViewModels
@model TaskViewModel
@{
    string actionName = Model.Id > 0 ? "Edit" : "Create";
}
<div class="container">

    <h1 class="display-4">@Html.Raw(actionName + " Task")</h1>

    <form method="post" action="@Url.Action(nameof(TaskController.SaveOrUpdate))">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)

        <div class="form-group col-md-12 px-0">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })

            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 3, @style = "resize:none" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>

        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label" })
                @Html.EnumDropDownListFor(model => model.Category, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.DeliveryDate, htmlAttributes: new { @class = "control-label" })

                @if (@Model != null)
                {
                    <input type="date" class="form-control" id="DeliveryDate" name="DeliveryDate" value="@Model.DeliveryDate.ToString("yyyy-MM-dd")" />
                }
                else
                {
                    @Html.EditorFor(model => model.DeliveryDate, new { htmlAttributes = new { @class = "form-control"} })
                }
                @Html.ValidationMessageFor(model => model.DeliveryDate, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6 px-0">
                @Html.Label("Assign a person responsable for this task", new { @class = "control-label" })
                @Html.DropDownListFor(model => model.PersonId, Model.PersonSelectList, String.Empty, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PersonId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-12 px-0">
            <button type="submit" class="btn btn-primary">Send</button>
        </div>
    </form>
</div>
